---
name: Release

on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: caddy

jobs:
  Release:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout repository code
        uses: actions/checkout@v4

      - name: Lint Dockerfile
        uses: hadolint/hadolint-action@v3.1.0

      - name: Collect build information
        run: |
          echo XCADDY_VERSION="$(go list -m -f '{{.Version}}' github.com/caddyserver/xcaddy)" >> "${GITHUB_ENV}"

      - name: Build container image
        uses: docker/build-push-action@v6.18.0
        with:
          push: false
          build-args: XCADDY_VERSION=${{ env.XCADDY_VERSION }}

      - name: Tag new version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          IMAGE_NAME: ${{ env.IMAGE_NAME }}
        run: |
          CADDY_VERSION="$(go list -m -f '{{.Version}}' github.com/caddyserver/caddy/v2)"
          MOST_RECENT_TAG="$(git describe --tags "$(git rev-list --tags --max-count=1)" 2> /dev/null || echo '0')"
          BUILD_NUMBER="$(echo "${MOST_RECENT_TAG}" | grep --perl-regexp --only-matching '\d+$')"
          ((BUILD_NUMBER++))
          TAG_NAME="${CADDY_VERSION}-${BUILD_NUMBER}"
          git tag "${TAG_NAME}"
          git push origin "${TAG_NAME}"
          gh release create "${TAG_NAME}" \
            --repo="$GITHUB_REPOSITORY" \
            --title="${IMAGE_NAME} ${TAG_NAME}" \
            --generate-notes

      - name: Log in to the container registry
        uses: docker/login-action@v3.5.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5.8.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build container image
        id: push
        uses: docker/build-push-action@v6.18.0
        with:
          push: true
          build-args: XCADDY_VERSION=${{ env.XCADDY_VERSION }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
